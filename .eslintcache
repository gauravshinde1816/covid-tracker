[{"/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/index.js":"1","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/App.js":"2","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/index.js":"3","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/Cards/Cards.js":"4","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/Charts/Charts.js":"5","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/CountryPicker/CountryPicker.js":"6","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/api/index.js":"7"},{"size":147,"mtime":1608605223354,"results":"8","hashOfConfig":"9"},{"size":934,"mtime":1609420405370,"results":"10","hashOfConfig":"9"},{"size":177,"mtime":1608606370062,"results":"11","hashOfConfig":"9"},{"size":2819,"mtime":1609418498099,"results":"12","hashOfConfig":"9"},{"size":1849,"mtime":1609418321264,"results":"13","hashOfConfig":"9"},{"size":975,"mtime":1609419018075,"results":"14","hashOfConfig":"9"},{"size":1102,"mtime":1609418795223,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12qdh5x",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/index.js",[],["35","36"],"/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/App.js",["37"],"import React, { Component } from \"react\";\nimport { Cards, Charts, CountryPicker } from \"./components\";\nimport { fetchData } from \"./api\";\nimport style from \"./App.module.css\";\nimport coronaImage from \"./images/covid.png\";\nexport class App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountry = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={style.container}>\n        <img className={style.image} src={coronaImage} />\n        <Cards data={data} />\n        <CountryPicker handleCountry={this.handleCountry} />\n        <Charts data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/index.js",[],"/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/Cards/Cards.js",[],["38","39"],"/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/Charts/Charts.js",["40","41"],"import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Charts.modules.css\";\nconst Charts = ({ data: { confirmed, recovered, deaths }, country }) => {\n  //Set the function level state\n  const [dailyData, setDailyData] = useState([]);\n\n  //Hooks\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchDailyData();\n\n      setDailyData(data);\n    };\n    console.log(dailyData);\n\n    fetchData();\n  }, []);\n\n  //Charts\n\n  const lineCharts = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        text: { display: true, text: `Country: ${country}` },\n      }}\n    />\n  ) : null;\n  return (\n    <div style={{ width: \"70%\", display: \"flex\", justifyContent: \"center\" }}>\n      {country ? barChart : lineCharts}\n    </div>\n  );\n};\n\nexport default Charts;\n","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/components/CountryPicker/CountryPicker.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport { FetchCountries } from \"../../api\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./Country.module.css\";\nconst CountryPicker = ({ handleCountry }) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setCountries(await FetchCountries());\n    };\n\n    fetchData();\n    console.log(countries);\n  }, [setCountries]);\n  return (\n    <div>\n      <FormControl className={styles.formControl}>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => {\n            handleCountry(e.target.value);\n          }}\n        >\n          <option value=\"\">Global</option>\n          {countries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default CountryPicker;\n","/home/saurabh/Desktop/Webdev/React/React-project/covid19-tracker/src/api/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":24,"column":9,"nodeType":"49","endLine":24,"endColumn":58},{"ruleId":"43","replacedBy":"50"},{"ruleId":"45","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":19,"column":6,"nodeType":"58","endLine":19,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":14,"column":6,"nodeType":"58","endLine":14,"endColumn":20,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dailyData'. Either include it or remove the dependency array.","ArrayExpression",["64"],"React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [dailyData]",{"range":"70","text":"71"},"Update the dependencies array to be: [countries, setCountries]",{"range":"72","text":"73"},[536,538],"[dailyData]",[457,471],"[countries, setCountries]"]